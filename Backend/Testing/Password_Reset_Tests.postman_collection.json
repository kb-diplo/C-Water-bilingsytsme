{
	"info": {
		"_postman_id": "a1b2c3d4-e5f6-7890-abcd-ef1234567890",
		"name": "Water Billing System - Password Reset Tests",
		"description": "Complete test collection for forgot password and reset password functionality",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "1. Test Forgot Password - Valid Email",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"admin@example.com\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/api/auth/forgot-password",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"auth",
						"forgot-password"
					]
				},
				"description": "Test forgot password with a valid email address"
			},
			"response": []
		},
		{
			"name": "2. Test Forgot Password - Invalid Email",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"nonexistent@example.com\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/api/auth/forgot-password",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"auth",
						"forgot-password"
					]
				},
				"description": "Test forgot password with non-existent email (should still return success for security)"
			},
			"response": []
		},
		{
			"name": "3. Test Forgot Password - Invalid Email Format",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"email\": \"invalid-email-format\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/api/auth/forgot-password",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"auth",
						"forgot-password"
					]
				},
				"description": "Test forgot password with invalid email format (should return validation error)"
			},
			"response": []
		},
		{
			"name": "4. Test Reset Password - Valid Token",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"token\": \"{{resetToken}}\",\n  \"newPassword\": \"NewPassword123!\",\n  \"confirmPassword\": \"NewPassword123!\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/api/auth/reset-password",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"auth",
						"reset-password"
					]
				},
				"description": "Test reset password with valid token (replace {{resetToken}} with actual token from email)"
			},
			"response": []
		},
		{
			"name": "5. Test Reset Password - Invalid Token",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"token\": \"invalid-token-12345\",\n  \"newPassword\": \"NewPassword123!\",\n  \"confirmPassword\": \"NewPassword123!\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/api/auth/reset-password",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"auth",
						"reset-password"
					]
				},
				"description": "Test reset password with invalid token"
			},
			"response": []
		},
		{
			"name": "6. Test Reset Password - Password Mismatch",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"token\": \"{{resetToken}}\",\n  \"newPassword\": \"NewPassword123!\",\n  \"confirmPassword\": \"DifferentPassword123!\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/api/auth/reset-password",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"auth",
						"reset-password"
					]
				},
				"description": "Test reset password with mismatched passwords"
			},
			"response": []
		},
		{
			"name": "7. Test Login After Password Reset",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"username\": \"admin\",\n  \"password\": \"NewPassword123!\"\n}"
				},
				"url": {
					"raw": "{{baseUrl}}/api/auth/login",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api",
						"auth",
						"login"
					]
				},
				"description": "Test login with new password after successful reset"
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://localhost:7000",
			"description": "Base URL for the Water Billing API"
		},
		{
			"key": "resetToken",
			"value": "",
			"description": "Reset token received from email (update this manually)"
		}
	]
}
